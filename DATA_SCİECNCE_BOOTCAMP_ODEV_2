/* 1. Soru) Invoice tablosunda, tüm değerleri NULL olan kayıtların sayısını bulmanız
isteniyor.
Bu işlemi tek bir sorgu ile yapmalısınız. Sorguyu yazdıktan sonra, PostgreSQL’in
sol alt kısmındaki Row sayısını, SQL sorgunuzda yorum satırında belirtmeniz
gerekmektedir.*/
-- invoice tablosundaki kolonların hepsinde null olan değerleri ekrana yazdıran sorgu.
select * from invoice where invoice_date is null or billing_address is null or billing_city is null or billing_state is null or billing_country is null or billingpostal_code is null or total is null;


/* 2. Soru) Koordinasyondaki kişiler, Total değerlerinde bir hata olduğunu belirtiyorlar.
Bu değerlerin iki katını görmek ve eski versiyonlarıyla birlikte karşılaştırmak için bir
sorgu yazmanız isteniyor. Ayrıca, verilerin daha rahat takip edilebilmesi için,
tablonun yeni versiyonuna ait kolona göre büyükten küçüğe sıralama yapılması
isteniyor.*/
/* invoice tablosundaki total değerin iki katını alıp tablonun sonuna yeni kolan 
olarak ekliyoruz ve yeni eklediğimiz kolonu büyükten küçüğe oğru sıralıyoruz. */
select *, (total*2) as twiceTheTotal from invoice order by twiceTheTotal desc;


/* 3. Soru) 3. Adres kolonundaki verileri, soldan 3 karakter ve sağdan 4 karakter alarak
birleştirmeniz ve "Açık Adres" olarak yazmanız isteniyor. Ayrıca, bu yeni açık adresi
2013 yılı ve 8. ay’a göre filtrelemeniz gerekiyor.*/
/* billing_address kolonun ilk 3 ve son 4 harfini birleştirip yeni kolan olarak ekliyorum where koşuluyla 
2013 yılı 8. ayı içerisnde bulunan değerleri çekiyorum. */
select invoice_date,billing_address,CONCAT(left(billing_address, 3),right(billing_address,4 )) as Acik_Adres from invoice where invoice_date BETWEEN '2013-08-01 00:00:00' and '2013-08-31 00:00:00';

